name: iOS

on:
  push:
    branches:
      - master
      - 'Stable*'
    tags:
      - 'v*'
    paths-ignore:
      - 'android/**'
      - 'deploy/**'
      - 'docs/**'
  pull_request:
    paths-ignore:
      - 'android/**'
      - 'deploy/**'
      - 'docs/**'
      - '.github/workflows/android-*.yml'
      - '.github/workflows/docs_deploy.yml'
      - '.github/workflows/*linux.yml'
      - '.github/workflows/macos.yml'
      - '.github/workflows/windows.yml'

jobs:
  build:
    runs-on: macos-latest

    strategy:
      matrix:
        BuildType: [Release]

    defaults:
      run:
        shell: bash

    env:
      ARTIFACT: QGroundControl.app
      QT_VERSION: 6.6.3
      GST_VERSION: 1.22.12

    steps:
      - name: Recover disk space
        run: |
          df -h
          ls /Applications
          brew uninstall google-chrome
          sudo rm -rf /Users/runner/Library/Android
          sudo rm -rf /Applications/Xcode_14*
          sudo rm -rf /Applications/Xcode_15.0*
          sudo rm -rf /Applications/Xcode_15.1*
          sudo rm -rf /Applications/Xcode_15.2*
          sudo rm -rf /Applications/Xcode_15.3*
          ls /Applications
          df -h

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-tags: true
          fetch-depth: 0

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - uses: seanmiddleditch/gha-setup-ninja@v5

      - name: Install Dependencies
        run: |
          brew update
          brew install cmake ninja ccache

      - name: Set Up Cache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}-iOS-${{ matrix.BuildType }}
          restore-keys: ${{ runner.os }}-iOS-${{ matrix.BuildType }}
          max-size: 1G
          append-timestamp: false
          save: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}

      - name: Install Qt for MacOS
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          aqtversion: ==3.1.*
          host: mac
          target: desktop
          arch: clang_64
          dir: ${{ runner.temp }}
          modules: qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtserialport qtimageformats qtshadertools qtconnectivity qtquick3d qtsensors
          cache: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}

      - name: Install Qt for iOS
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          aqtversion: ==3.1.*
          host: mac
          target: ios
          dir: ${{ runner.temp }}
          extra: --autodesktop
          modules: qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtimageformats qtshadertools qtconnectivity qtquick3d qtsensors
          cache: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}

      - run: mkdir ${{ runner.temp }}/shadow_build_dir

      - name: Configure
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: ${{ env.QT_ROOT_DIR }}/bin/qt-cmake -S ${{ github.workspace }} -B . -G Ninja
              -DCMAKE_BUILD_TYPE=${{ matrix.BuildType }}
              -DQT_DEBUG_FIND_PACKAGE=ON
              -DCMAKE_OSX_ARCHITECTURES="arm64"
              -DQT_HOST_PATH="${{ env.QT_ROOT_DIR }}/../macos"
              -DQGC_STABLE_BUILD=${{ github.ref_type == 'tag' || contains(github.ref, 'Stable') && 'ON' || 'OFF' }}
              -DCMAKE_FIND_ROOT_PATH="/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/"
              -DQGC_ENABLE_GST_VIDEOSTREAMING=OFF

      - name: Build
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: cmake --build . --target all --config ${{ matrix.BuildType }}

      - name: Save App
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}/shadow_build_dir/*.app
